spring.application.name=hotel_ocean_royal


# hibernate config
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/hotel_management?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=nhat2102
spring.datasource.driver-class-name =com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true
spring.jpa.generate-ddl=true
spring.web.resources.add-mappings=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

# login google
# Google OAuth2 Client
spring.security.oauth2.client.registration.google.client-id=<Google-client-id>
spring.security.oauth2.client.registration.google.client-secret=<Google-client-secrect>
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# Google OAuth2 Provider
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# CORS configuration
app.cors.allowedOrigins=http://localhost:3000,http://localhost:8080